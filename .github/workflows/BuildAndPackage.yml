name: Build and Package Java Application

on:
  push:
    branches:
      - main  # Trigger on push to main branch
env:
  PKG_NAME: jtreesize
  MAIN_CLASS: org.ligson.jtreesize.App
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]  # Run on all three platforms
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"  # Use Eclipse Temurin distribution
          java-version: "21"

      - name: Set up Maven Cache
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Extract Version from POM (Windows)
        if: runner.os == 'Windows'
        id: get-version-windows
        run: |
          pwsh -command '$version = (mvn help:evaluate -Dexpression=project.version -q -DforceStdout); $version = $version.Trim(); echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append'

      - name: Extract Version from POM (Linux and macOS)
        if: runner.os != 'Windows'
        id: get-version-linux-macos
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          version=$(echo $version | xargs)  # Trim any leading/trailing spaces
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn  clean package '-Dmaven.test.skip=true'

      - name: Prepare Output Directory
        run: mkdir -p dist

      - name: Go To Target Dir
        run: cd target

      - name: Extract Packaged Archive
        if: runner.os != 'Windows'
        run: |
          tar -zxvf ${{ env.PKG_NAME }}-${{ env.VERSION }}-${{ env.PKG_NAME }}.tar.gz 

      - name: Extract Packaged Archive (Windows)
        if: runner.os == 'Windows'
        run: |
          tar -zxvf ${{ env.PKG_NAME }}-${{ env.VERSION }}-${{ env.PKG_NAME }}.tar.gz 

      - name: Install WiX Toolset (Windows Only)
        if: runner.os == 'Windows'
        run: choco install wix --version=3.11.2

      - name: GoToAppDir
        run: cd ${{ env.PKG_NAME }}-${{ env.VERSION }}

      - name: Package Application with jpackage
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            jpackage \
              --input . \
              --name ${{ env.PKG_NAME }} \
              --main-jar lib/${{ env.PKG_NAME }}-${{ env.VERSION }}.jar \
              --main-class ${{ env.MAIN_CLASS }} \
              --type exe \
              --resource-dir conf \
              --icon conf/treesize.ico \
              --win-dir-chooser \
              --win-shortcut  \
              --app-version ${{ env.VERSION }}
          else
            jpackage \
              --input . \
              --name ${{ env.PKG_NAME }} \
              --main-jar lib/${{ env.PKG_NAME }}-${{ env.VERSION }}.jar \
              --main-class ${{ env.MAIN_CLASS }} \
              --type dmg \
              --resource-dir conf \
              --icon conf/treesize.ico \
              --app-version ${{ env.VERSION }}
          fi

      - name: Move Output to Dist Folder
        run: mv ${{ env.PKG_NAME }}-* ../../dist/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}-${{ env.VERSION }}-${{ matrix.os }}
          path: ../../dist/
