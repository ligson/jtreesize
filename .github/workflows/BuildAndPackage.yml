name: Build and Package Java Application

on:
  push:
    # 只有当推送 Tag 满足以下正则时，才会执行本工作流
    tags:
      - '[0-9]*.[0-9]*'
      - '[0-9]*.[0-9]*.[0-9]*'

permissions:
  contents: write
  packages: write
  actions: write

env:
  PKG_NAME: jtreesize
  MAIN_CLASS: org.ligson.jtreesize.App

jobs:
  build:
    name: Build (Multi-OS)
    strategy:
      matrix:
        include:
          - os: windows-latest
            architecture: x64
          - os: ubuntu-latest
            architecture: x64
          - os: ubuntu-latest
            architecture: aarch64
          - os: macos-latest
            architecture: x64
          - os: macos-latest
            architecture: aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取所有历史记录

      - name: Check Runner Architecture
        run: |
          echo "Runner architecture: $(uname -m)"

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and Package
        run: |
          # 假设使用 Maven
          mvn clean package -DskipTests

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}-${{ matrix.architecture }}
          path: target/*.jar

  changelog:
    name: Generate Changelog and Release
    # 只有当 build Job 完成后才执行此 Job
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Changelog
        run: |
          CURRENT_DATE=$(date +"%Y-%m-%d")
          
          # 获取最新 Tag
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "# $LATEST_TAG ($CURRENT_DATE)" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # 获取上一个 Tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
          
          # 获取 $PREVIOUS_TAG..$LATEST_TAG 的提交记录，写入 CHANGELOG.md
          git log --pretty=format:"* %s" $PREVIOUS_TAG..$LATEST_TAG >> CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
