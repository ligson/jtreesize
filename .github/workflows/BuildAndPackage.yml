name: Build and Package Java Application

on:
  push:
    branches:
      - main  # 触发条件：推送到 main 分支

permissions:
  contents: write
  packages: write
  actions: write

env:
  PKG_NAME: jtreesize
  MAIN_CLASS: org.ligson.jtreesize.App

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]  # 在三个平台上运行
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21 and Maven Cache
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"  # 使用 Eclipse Temurin 发行版
          java-version: "21"
          cache: "maven"

      - name: Extract Version from POM (Windows)
        if: runner.os == 'Windows'
        id: get-version-windows
        run: |
          $version = (mvn help:evaluate '-Dexpression=project.version' -q -DforceStdout)
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Extract Version from POM (Linux and macOS)
        if: runner.os != 'Windows'
        id: get-version-linux-macos
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          version=$(echo $version | xargs)  # 去除前后空格
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn clean package '-Dmaven.test.skip=true'

      - name: Prepare Output Directory
        run: mkdir -p dist

      - name: Extract Packaged Archive
        run: |
          tar -zxvf target/${{ env.PKG_NAME }}-${{ env.VERSION }}-${{ env.PKG_NAME }}.tar.gz -C target/

      - name: Install WiX
        if: runner.os == 'Windows'
        run: dotnet tool install --global wix

      - name: Package Application with jpackage (Windows)
        if: runner.os == 'Windows'
        run: |
          jpackage `
            --input . `
            --name ${{ env.PKG_NAME }} `
            --main-jar lib/${{ env.PKG_NAME }}-${{ env.VERSION }}.jar `
            --main-class ${{ env.MAIN_CLASS }} `
            --type exe `
            --resource-dir conf `
            --icon conf/treesize.ico `
            --win-dir-chooser `
            --win-shortcut `
            --app-version ${{ env.VERSION }}
          mv ${{ env.PKG_NAME }}-${{ env.VERSION }}.exe ../../dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-Windows.exe
        working-directory: target/${{ env.PKG_NAME }}-${{ env.VERSION }}

      - name: Package Application with jpackage (macOS)
        if: runner.os == 'macOS'
        run: |
          jpackage \
            --input . \
            --name ${{ env.PKG_NAME }} \
            --main-jar lib/${{ env.PKG_NAME }}-${{ env.VERSION }}.jar \
            --main-class ${{ env.MAIN_CLASS }} \
            --type dmg \
            --resource-dir conf \
            --icon conf/treesize.icns \
            --app-version ${{ env.VERSION }}
          mv ${{ env.PKG_NAME }}-${{ env.VERSION }}.dmg ../../dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-macOS.dmg
        working-directory: target/${{ env.PKG_NAME }}-${{ env.VERSION }}

      - name: Package Application with jpackage (Linux)
        if: runner.os == 'Linux'
        run: |
          jpackage \
            --input . \
            --name ${{ env.PKG_NAME }} \
            --main-jar lib/${{ env.PKG_NAME }}-${{ env.VERSION }}.jar \
            --main-class ${{ env.MAIN_CLASS }} \
            --type tar.gz \
            --resource-dir conf \
            --icon conf/treesize.png \
            --app-version ${{ env.VERSION }}
          mv ${{ env.PKG_NAME }}-${{ env.VERSION }}.tar.gz ../../dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-Linux.tar.gz
        working-directory: target/${{ env.PKG_NAME }}-${{ env.VERSION }}

      - name: List dist directory (Unix)
        if: runner.os != 'Windows'
        run: ls -la dist/

      - name: List dist directory (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem dist

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}-${{ env.VERSION }}-${{ matrix.os }}
          path: dist/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body_path: CHANGELOG.md
          files: |
            dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-Windows.exe
            dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-macOS.dmg
            dist/${{ env.PKG_NAME }}-${{ env.VERSION }}-Linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

